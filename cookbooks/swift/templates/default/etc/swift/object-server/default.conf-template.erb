[DEFAULT]
mount_check = false
disable_fallocate = true
workers = 1
log_facility = LOG_LOCAL2

[pipeline:main]
pipeline = recon object-server

[app:object-server]
use = egg:swift#object
# Encryption's configurations:
## DummyDriver doesn't do encryption (this driver is default)
# crypto_driver = swift.obj.encryptor.DummyDriver
## To use module M2Crypto for encryption specify driver:
crypto_driver = swift.obj.encryptor.M2CryptoDriver
## M2Crypto driver support parameterized protocol(aes_128_cbc by default):
crypto_protocol = aes_128_cbc

# Key management for encryption configuration:
## DummyDriver which don't store keys and generate their as md5sum of account
## name (by default):
crypto_keystore_driver = swift.common.key_manager.drivers.dummy.DummyDriver
## To enable FakeDriver which use only one hardcoded key, uncomment next line:
# crypto_keystore_driver = swift.common.key_manager.drivers.fake.FakeDriver
## To ebale SQLDriver which generate keys and store it into SQL database,
## uncomment next line:
# crypto_keystore_driver = swift.common.key_manager.drivers.sql.SQLDriver
## SQLDriver support connection URI for SQLAlchemy, it's required if used
## SQLDriver:
# crypto_keystore_sql_url = mysql://root:12345@localhost/swift_encryption_store_key_account_database


[filter:recon]
use = egg:swift#recon

[object-updater]

[object-auditor]

[object-replicator]
# vm_test_mode = yes
sync_method = <%= @sync_method %>
